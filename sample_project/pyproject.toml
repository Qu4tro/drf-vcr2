[tool.poetry]
name = "sample_project"
version = "0.1.0"
description = ""
authors = ["Xavier Francisco <xavier.n.francisco@gmail.com>"]
readme = "README.md"
packages = [
    { include = "sample_project" },
    { include = "snippets" },
]


[tool.poetry.dependencies]
python = "^3.10"
django = "^4.2.1"
djangorestframework = "^3.14.0"
drf-spectacular = "^0.26.2"
pygments = "^2.15.1"
django-stubs-ext = "^4.2.0"
drf-snap-testing = {path = ".."}
drf-yaml = {path = "/home/quatro/tmp/django-rest-framework-yaml"}

[tool.poetry.group.dev.dependencies]
django-extensions = "^3.2.1"
types-pygments = "^2.15.0.1"
pylint = "^2.17.4"
pylint-django = "^2.5.3"
pytest = "^7.3.1"
pytest-django = "^4.5.2"
mypy = "^1.3.0"
django-stubs = "^4.2.0"
djangorestframework-stubs = "^3.14.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
absolufy-imports = "^0.3.1"
black = "^23.3.0"
werkzeug = "^2.3.4"
ipython = "^8.13.2"

[tool.black]
target-version = ['py310']

[tool.isort]
profile = "black"

[tool.pylint.format]
max-line-length = "88"

[tool.mypy]
strict = true
disallow_subclassing_any = false
plugins = [
  "mypy_django_plugin.main",
  "mypy_drf_plugin.main",
]

[tool.pylint.master]
init-hook="""
import os, sys
sys.path.append(os.path.dirname('.'))
"""
load-plugins = "pylint_django"
django-settings-module="sample_project.settings"
ignore = """
  migrations
"""

[tool.pylint.messages_control]
enable = "useless-suppression"
disable = """
  missing-function-docstring,
  missing-module-docstring,
  missing-class-docstring,
  unsubscriptable-object,
  useless-super-delegation
"""

[tool.pylint.design]
max-parents=12
max-attributes=12
min-public-methods=0

[tool.django-stubs]
django_settings_module = "sample_project.settings"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
